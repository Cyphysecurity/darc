# UTD Modifications

* Redefining the steering (STR) pin
    The code of the Arduino configuration was modified to properly read input signals from the vehicle's steering (STR). Previously,
    the pin was specified incorrectly in the arduino_nano328_node.ino file.
    
* Different IMU used
    In the UTD implementation, a Razor M0 IMU was used instead of the myAHRS+ IMU. In order to do this, the Razor M0 IMU driver was
    installed on the Odroid and the hardware references to the IMU in the code were redefined to reflect this.
    
* Different webcam used
    In the UTD implementation, a Logitech c920 webcam was used instead of the ELP USB camera. The Logitech c920 camera did not use any
    drivers, and ran with the BARC code.

* Encoders printed in black and filled in with white
    BARC car printed encoders in white and filled in with black

* Unit inconsistency
    Some of the original code was inconsistent in its calculations. To fix this, a wrapper function was written to ensure that values
    passed to the hardware on the car will always be in the correct units.
    
* openLoop_straight.launch
    Line 29 → fxR_target Value changed from 0 to 90

* controller_straight.py
    step _up → remove /50

* controller_low_level.py
    Update_arduino() : Added this function to convert to microseconds in order to have the 90 value centered at 1500 in the Arduino
    range.

## Unresolved Issues

* When running rc_manual.launch, going from full throttle forward on the controller to suddenly going backwards doesn’t get communicated
    to hardware properly. The values are correctly read by the software, but there is no response from the hardware.
